<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
					"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user_mapper">


	<select id="findLoginCustomer" parameterType="Customer"
		resultType="Customer">
		SELECT * FROM job_customer WHERE user_id=#{userId} and
		password=#{password}
	</select>

	<select id="findCustomerInfo" parameterType="String"
		resultType="Customer">
		SELECT * FROM job_customer WHERE user_id = #{userId}
	</select>

	<update id="modifyCustomerInfo" parameterType="Customer">
		UPDATE
		job_customer
		SET name = #{name} ,
		birth = #{birth},
		phone = #{phone}
		WHERE user_id = #{userId}
	</update>




	<select id="pwCheck" resultType="String">
		select password from
		job_customer where user_id = #{userId}
	</select>

	<update id="pwUpdate">
		update job_customer set password = #{password} where
		user_id = #{userId}
	</update>

	<update id="modifyCustomerPw" parameterType="Customer">
		UPDATE job_customer
		SET password = #{password}
		WHERE user_id = #{userId}
	</update>

	<update id="removeCustomer" parameterType="Customer">
		UPDATE job_customer
		SET customer_status = #{customerStatus}
		WHERE user_id = #{userId}
	</update>

	<select id="findCustomerListBySearchCondition"
		resultType="Customer" parameterType="CustomerSearchCondition">
		SELECT *
		FROM job_customer
		WHERE 1=1
		<if test="searchKeyword != null and !searchKeyword.isEmpty()">
			<choose>
				<when test="sfl == 'userId'">
					AND user_id LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="sfl == 'email'">
					AND email = #{searchKeyword}
				</when>
				<when test="sfl == 'name'">
					AND name LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="sfl == 'phone'">
					AND phone LIKE '%' || #{searchKeyword} || '%'
				</when>
			</choose>
		</if>
		<!-- 가입기간 조회 -->
		<if test="spt == 'createdDate'">
			<if test="startDate != null and startDate != ''">
				<![CDATA[AND TO_DATE(created_date, 'YYYY-MM-DD') >= TO_DATE(#{startDate}, 'YYYY-MM-DD')]]>
			</if>
			<if test="endDate != null and endDate != ''">
				<![CDATA[AND TO_DATE(created_date, 'YYYY-MM-DD') <= TO_DATE(#{endDate},
			'YYYY-MM-DD')]]>
			</if>
		</if>
		<if test="spt == 'birth'">
			<if test="startDate != null and startDate != ''">
			<![CDATA[AND TO_DATE(birth, 'YYYY-MM-DD') >= TO_DATE(#{startDate},
			'YYYY-MM-DD')]]>
			</if>
			<if test="endDate != null and endDate != ''">
				AND TO_DATE(birth, 'YYYY-MM-DD') &lt;=
				TO_DATE(#{endDate},
				'YYYY-MM-DD')
			</if>
		</if>
		<if test="gender != null and gender != ''">
			AND gender = #{gender}
		</if>
	</select>

	<select id="findCustomerList" resultType="Customer">
		SELECT *
		FROM
		job_customer
	</select>

	<delete id="removeResumeByResumeId" parameterType="String">
		delete from
		resume_info where resume_id = #{resumeId}
	</delete>


	<insert id="scrapNotice" parameterType="Scrap">
		insert into scrap VALUES
		(seq_scrap_id.nextVal ,
		#{userId} ,
		#{postingId},
		#{scrapStatus}
		)
	</insert>

	<!-- 1:1 faq -->
	<insert id="customerFaq" parameterType="CustomerFaq">
		insert into customer_faq
		VALUES
		(seq_customer_faq_id.nextVal,
		#{faqTitle},
		#{faqContent},
		#{userId},
		'O'
		)

	</insert>

	<select id="customerScrapList" parameterType="String"
		resultType="Scrap">
		select *
		from scrap s, job_posting j
		where s.posting_id =
		j.posting_id
		and user_id =
		#{userId} and j.post_status = 'O'
	</select>

	<select id="scrapNoticeInfo" parameterType="String"
		resultType="Notice">
		select * from description d , scrap s, job_posting j
		where
		d.posting_id = s.posting_id and s.posting_id = j.posting_id and
		s.posting_id = #{postingId}
	</select>

	<delete id="removeCustomerScrapList" parameterType="String">
		delete from
		scrap where user_id = #{userId}
	</delete>

	<delete id="removeCustomerScrapItem" parameterType="String">
		delete from
		scrap where scrap_id = #{scrapId}
	</delete>

	<delete id="removeCustomerScrapItemByPostingId"
		parameterType="String">
		delete from scrap where posting_id = #{postingId}
	</delete>

</mapper>

	


